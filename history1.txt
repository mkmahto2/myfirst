    1  sudo apt-get update
    2  sudo apt-get install     apt-transport-https     ca-certificates     curl     gnupg-agent     software-properties-common
    3  $ sudo apt-key fingerprint 0EBFCD88
    4  sudo apt-key fingerprint 0EBFCD88
    5  sudo add-apt-repository    "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
    6     $(lsb_release -cs) \
    7     stable"
    8  sudo apt-get update
    9  sudo apt-get install docker-ce=<VERSION_STRING> docker-ce-cli=<VERSION_STRING> containerd.io
   10  docker ps
   11  sudo apt install docker.io
   12  sudo get update
   13  sudo apt-get install docker-ce=<VERSION_STRING> docker-ce-cli=<VERSION_STRING> containerd.io
   14  sudo apt-get install docker-ce=<VERSION_STRING> docker-ce-cli="18.04" containerd.io
   15  sudo apt-get install docker-ce=<VERSION_STRING> docker-ce-cli=<VERSION_STRING> containerd.io
   16  sudo dpkg -i /path/to/package.deb
   17  sudo dpkg -i /tmp/mozilla_mkmahto0/Packages.gz
   18  sudo dpkg -i 
   19  sudo dpkg -i /home/mkmahto/Downloads/Packages
   20  sudo dpkg -i /home/mkmahto/Downloads/Packages.deb
   21  sudo dpkg -i /home/mkmahto/Downloads/Packages.deb/home/mkmahto/Downloads/Packages(2)
   22  sudo dpkg -i /home/mkmahto/Downloads/Packages.deb/home/mkmahto/Downloads/Packages(2).deb
   23  sudo apt update
   24  apt list --upgradable
   25  apt-cache policy docker-ce
   26  sudo apt install docker-ce
   27  docker images
   28  sudo usermod -aG docker ${USER}
   29  su - ${USER}
   30  docker images
   31  mkdir mkmahto2
   32  ls -a
   33  cd mkmahto2
   34  docker-compose.yml
   35  vim docker-compose.yml
   36  sudo apt install vim-gtk
   37  cd ./..
   38  sudo apt install vim-gtk
   39  sudo apt install vim 
   40  sudo apt install vim-athena
   41  sudo get vim
   42  sudo apt-get install vim
   43  sudo -s
   44  sudo apt-get update
   45  apt-get install vim
   46  docker images
   47  apt-get install vim
   48  apt-get install vim-gnome
   49  sudo
   50  ls
   51  vim docker-compose.yml
   52  apt install vim-nox
   53  apt install vim
   54  ps aux | grep -i apt
   55  apt install vim
   56  ps aux | grep -i apt
   57  sudo kill -9 4624
   58  sudo kill 1118
   59  ps aux | grep -i apt
   60  sudo kill 4013 4056 4069 4109
   61  ps aux | grep -i apt
   62  apt install vim
   63  cd .//.
   64  sudo -s
   65  sudo apt-get update
   66  sudo -s
   67  apt install vim
   68  apt install gnome
   69  vim dockerfile
   70  sudo apt install vim
   71  mkdir
   72  mkdir mahto2
   73  cd mahto2
   74  vim docker-compose.yml
   75  docker-compose up
   76  docker-compose up -d
   77  docker-compose -f docker-compose.yml up -d
   78  curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
   79  chmod +x ~/docker-compose
   80  sudo mv ~/docker-compose /usr/local/bin/docker-compose
   81  docker-compose run test
   82  docker-compose up -d
   83  vim docker-compose.yml
   84  docker-compose up -d
   85  vim docker-compose.yml
   86  docker-compose up -d
   87  ls
   88  mkdir vote
   89  cd vote
   90  docker-compose up -d
   91  vim docker-compose.yml
   92  sudo apt-get install wkhtmltopdf
   93  sudo lsof /var/lib/apt/lists/lock
   94  sudo lsof /var/cache/apt/archives/lock
   95  sudo lsof /var/lib/dpkg/lock
   96  sudo lsof /var/lib/apt/lists/lock
   97  sudo lsof /var/cache/apt/archives/lock
   98  sudo lsof /var/lib/dpkg/lock
   99  sudo lsof /var/cache/apt/archives/lock
  100  sudo lsof /var/lib/dpkg/lock
  101  sudo apt-get install wkhtmltopdf
  102  mkdir dev
  103  cd ../dev
  104  cd dev
  105  git clone https://github.com/mkmahto2/Unifiedtransform.git
  106  ls
  107  ls -a
  108  git clone https://github.com/mkmahto2/Unifiedtransform.git
  109  cd..
  110  cd ..
  111  rm dev
  112  mkdir dev1
  113  cd dev1
  114  git clone https://github.com/mkmahto2/Unifiedtransform.git
  115  cat env
  116  cat .env
  117  ls
  118  cd Unifiedtransform
  119  cat .env
  120  vim .env
  121  php artisan migrate
  122  composer install
  123  sudo apt composer install
  124  sudo apt update && sudo apt install wget php-cli php-zip unzip cu
  125  cd..
  126  composer install
  127  sudo apt update
  128  sudo apt install wget php-cli php-zip unzip
  129  sudo -s
  130  ls
  131  mukesh
  132  cd mukesh
  133  mkdir mukesh
  134  git clone https://github.com/redashu/summer2020dockertest.git
  135  mkdir mukesh
  136  cd mukesh
  137  git clone
  138  git clone https://github.com/NehaPatidar208/Docker_compose.git
  139  ls
  140  cd Docker_compose
  141  ls
  142  docker-compose up -d
  143  docker-compose -f  up -d
  144  version
  145  docker-compose version
  146  ls
  147  nano docker-compose.yaml
  148  ls
  149  docker-compose version
  150  sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  151  sudo -s
  152  sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  153  sudo chmod +x /usr/local/bin/docker-compose
  154  docker-compose version
  155  docker-compose -f  up -d
  156  docker-compose   up -d
  157  cd mukesh
  158  ls
  159  docker-compose   up -d
  160  cd Docker-compose
  161  vim Docker-compose
  162  ls
  163  rm mukesh
  164  mkdir test
  165  cd test
  166  git clone https://github.com/NehaPatidar208/Docker_compose.git
  167  docker-compose up -d
  168  ls
  169  cd Docker-compose
  170  ls
  171  vim Docker-compose
  172  sudo -i
  173  ls
  174  sudo -i Desktop/oracle1.pem ec2-user@172.31.5.111
  175  ls
  176  cd desktop
  177  cd Desktop/
  178  ls
  179  sudo -i Desktop/oracle1.pem ec2-user@172.31.5.111
  180  ls
  181  sudo -i Desktop/oracle1.pem ec2-user@172.31.5.111
  182  sudo apt install openssh-server
  183  sudo -i Desktop/oracle1.pem ec2-user@172.31.5.111
  184  sudo apt update
  185  sudo apt install openssh-server
  186  sudo systemctl status ssh
  187  sudo -i
  188  ssh -i Desktop/oracle1.pem ec2.user@3.15.37.117
  189  ls
  190  cd Desktop
  191  ls
  192  cd Desktop/
  193  ls
  194  ssh ssh -i "oracle1.pem" ec2-user@ec2-3-15-37-117.us-east-2.compute.amazonaws.com
  195  ssh user@server
  196  ls
  197  cd /etc
  198  ls
  199  vim host
  200  vim hosts fie
  201  which aws
  202  cd /.local
  203  s -al /usr/local/bin/python
  204  ls -al /usr/local/bin/python
  205  chmod 400
  206  sudo chmod a+rwx   /usr/local/bin/python
  207  sudo chmod a+rwx /home/mkmahto/.local/bin/aws
  208  ls -al /usr/local/bin/python
  209  which python
  210  aws --version
  211  ls
  212  which aws
  213  cd /home/mkmahto/.local/bin/aws
  214  aws configure
  215  # Copyright 2018 widdix GmbH
  216  #
  217  # Licensed under the Apache License, Version 2.0 (the "License");
  218  # you may not use this file except in compliance with the License.
  219  # You may obtain a copy of the License at
  220  #
  221  #     http://www.apache.org/licenses/LICENSE-2.0
  222  #
  223  # Unless required by applicable law or agreed to in writing, software
  224  # distributed under the License is distributed on an "AS IS" BASIS,
  225  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  226  # See the License for the specific language governing permissions and
  227  # limitations under the License.
  228  AWSTemplateFormatVersion: '2010-09-09'
  229  Description: 'State: S3 bucket, a cloudonaut.io template, sponsored by https://github.com/ngault'
  230  Metadata:
  231  Parameters:
  232  Conditions:
  233  Resources:
  234  which aws
  235  which python
  236  cd ~/.local/bin/
  237  ls
  238  cd ~/.local/bin/
  239  which python
  240  ls
  241  vim textcfn.yml
  242  aws --version
  243  mkdir project2
  244  cd project2/
  245  git clone https://github.com/mkmahto2/Udacity-Cloud-DevOps-Engineer.git
  246  aws --version
  247  sh create.sh HighAvailableWebApp cf_network.yml cf_network-parameters.json
  248  sh create.sh HighAvailableWebApp cf_network.yml cf_network-parameters.jsonls
  249  ls
  250  cd Udacity-Cloud-DevOps-Engineer/
  251  sh create.sh HighAvailableWebApp cf_network.yml cf_network-parameters.jsonls
  252  ws configure
  253  aws configure
  254  aws s3 ls
  255  aws configure
  256  aws s3 ls
  257  aws cloudformation create-stack 
  258  --stack-name $1 
  259  --template-body file://$2  
  260  --parameters file://$3 
  261  --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM" 
  262  --region=us-west-2
  263  sh create.sh HighAvailableWebApp cf_network.yml cf_network-parameters.jsonls
  264  sh create.sh HighAvailableWebApp cf_network.yml cf_network-parameters.json
  265  aws cloudformation create-stack 
  266  --stack-name myfirsttest 
  267  --region us-west-2 
  268  --template-body file://testcfn.yml
  269  ls testcfn.yml
  270  ls
  271  cd 02_highly_available_web_app_using_cf/
  272  ls
  273  aws cloudformation create-stack 
  274  --stack-name myfirsttest 
  275  --region us-west-2 
  276  --template-body file://testcfn.yml
  277  --template-body file://testcfn.ymlaws cloudformation create-stack 
  278  aws cloudformation create-stack 
  279  aws help
  280  aws cloudformation create-stack --stack-name myfirstest --region us-west-2 --template-body file://testcfn.yml
  281  ls
  282  cd project2
  283  ls
  284  cd Udacity-Cloud-DevOps-Engineer/
  285  ls
  286  cd 02_highly_available_web_app_using_cf/
  287  aws cloudformation create-stack --stack-name myfirstest --region us-west-2 --template-body file://testcfn.yml
  288  aws cloudformation create-stack --stack-name myfirstest --region us-west-2 --template-body file://test.yml
  289  aws cloudformation create-stack 
  290  --stack-name $1 
  291  --template-body file://$2  
  292  --parameters file://$3 
  293  --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM" 
  294  aws cloudformation create-stack --stack-name myfirstest --region us-west-2
  295  aws --version
  296  aws cloudformation create-stack --stack-name myfirstest --region us-west-2 --template-body file://test.yml
  297  aws cloudformation create-stack --stack-name myfirstest --region us-west-2 --template-body file://testcfn.yml
  298  mkdir
  299  mkdir mk
  300  cd mk
  301  git clone https://github.com/CharlesConner/udacity-devops-engineer-project-2.git
  302  ls
  303  cd ..
  304  mkdir mk
  305  cd mk
  306  git clone https://github.com/dmavridis/Udacity-DevOps.git
  307  ls
  308  cd Udacity-DevOps/
  309  ls
  310  cd ..
  311  ls
  312  git clone https://github.com/CharlesConner/udacity-devops-engineer-project-2.git
  313  ls
  314  cd Udacity-DevOps/
  315  ls
  316  cd ..
  317  ls
  318  cd udacity-devops-engineer-project-2/
  319  ls
  320  aws cloudformation create-stack --stack-name myfirstest --region us-west-2 --template-body file://infra.yml
  321  ./create.sh udacity.yaml
  322  ls
  323  aws cloudformation create-stack --stack-name myfirstest --region us-west-2 --template-body file://infra.yml
  324  vim infra.yml
  325  cd f
  326  ls
  327  sh create.sh udacity-cloud-nanodegree-p2 networInfrastructure.yaml networkParameters.json
  328  sh create.sh udacity-cloud-nanodegree-p2 networkInfrastructure.yaml networkParameters.json
  329  aws configure
  330  cd ..
  331  mkdir udacity-nanodegree
  332  touch .git
  333  git
  334  ls
  335  cd udacity-nanodegree/
  336  git config --global user.name mkmahto2
  337  git config --global user.name mkmahto2git status
  338  cd git
  339  cd ..
  340  cd git
  341  ls
  342  cd ..
  343  cd udacity-nanodegree/
  344  git init
  345  touch i.txt
  346  git init
  347  git add
  348  git add .
  349  git config --global user.name mkmahto2
  350  git config --global user.email mukesh.7755@gmail.com
  351  git remote add origin https://github.com/mkmahto2/myfirst.git
  352  git status
  353  git push origin master
  354  git status
  355  git commit -m "my first commit@
  356  git push origin master
  357  git add .
  358  git push origin master
  359  ls
  360  touch .git
  361  ls
  362  git add .
  363  git commit -m "my first commit@
  364  git commit -m "my first commit"
  365  git push origin master
  366  history>
  367  history>history1.txt
